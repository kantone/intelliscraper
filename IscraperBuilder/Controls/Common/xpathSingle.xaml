<UserControl x:Class="IscraperBuilder.Controls.Common.xpathSingle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="414" d:DesignWidth="666"
             xmlns:local="clr-namespace:IscraperBuilder.Controls.Rules.Rule"
             >
    
    <UserControl.Resources>
        <SolidColorBrush x:Key="mouseOverColor" Color="Red" />
        <local:TreeViewLineConverter x:Key="LineConverter"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="#1BA1E2" />
        <!--=================================================================
      TreeViewItem
  ==================================================================-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
              Width="15"
              Height="13"
              Background="White">
                            <Path x:Name="ExpandPath"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Fill="{StaticResource GlyphBrush}"
                Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                   Value="True">
                                <Setter Property="Data"
                    TargetName="ExpandPath"
                    Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TreeViewItem}"
         TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background"
          Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment"
          Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
          Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding"
          Value="1,0,0,0"/>
            <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19"
                          Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Height="1" Stroke="#8888"  Margin="10,0,0,0" SnapsToDevicePixels="true"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#8888" Grid.RowSpan="2" SnapsToDevicePixels="true"/>
                            <ToggleButton x:Name="Expander"
                      Style="{StaticResource ExpandCollapseToggleStyle}"
                      IsChecked="{Binding Path=IsExpanded,
                              RelativeSource={RelativeSource TemplatedParent}}"
                      ClickMode="Press"/>
                            <Border Name="Bd"
                  Grid.Column="1"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                          ContentSource="Header"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                      Grid.Row="1"
                      Grid.Column="1"
                      Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn"
                    Property="Height"
                    Value="6"/>
                                <Setter TargetName="VerLn"
                    Property="VerticalAlignment"
                    Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded"
                   Value="false">
                                <Setter TargetName="ItemsHost"
                    Property="Visibility"
                    Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="Expander"
                    Property="Visibility"
                    Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                         Value="false"/>
                                    <Condition Property="Width"
                         Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                    Property="MinWidth"
                    Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                         Value="false"/>
                                    <Condition Property="Height"
                         Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                    Property="MinHeight"
                    Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected"
                   Value="true">
                                <Setter TargetName="Bd"
                    Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                         Value="true"/>
                                    <Condition Property="IsSelectionActive"
                         Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd"
                    Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                   Value="false">
                                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <ContextMenu x:Key="cMenu">       
            <MenuItem Header="Delete attribute" Click="MenuItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}">
                <MenuItem.Icon>
                    <Image Source="/img/022.png" Width="15" Height="15" Opacity="0.5" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="grMenu">
            <MenuItem Header="Delete Group" Click="MenuItem_Click_1" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parent}">
                <MenuItem.Icon>
                    <Image Source="/img/022.png" Width="15" Height="15" Opacity="0.5" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>
    
    <Grid Background="White">
        
        
        <TreeView  HorizontalAlignment="Left" Name="treeView1" VerticalAlignment="Stretch" Width="220" Margin="0,97,0,0" />
        <TextBlock Height="23" HorizontalAlignment="Left" Name="ruleName" Text="Name" FontWeight="Bold" Opacity="0.7" FontSize="16" VerticalAlignment="Top" Width="642" Margin="4,12,0,0" />
        <Frame  HorizontalAlignment="Left" Margin="230,35,0,0" Name="frame1" VerticalAlignment="Stretch" Width="434" />
        <TextBox Height="23" FontSize="11" HorizontalAlignment="Left" Margin="4,35,0,0" Name="textBox1" VerticalAlignment="Top" Width="120" />
        <Button Content="Add Attribute" Height="24" HorizontalAlignment="Left" FontSize="11" Margin="130,35,0,0" Name="button1" VerticalAlignment="Top" Width="90" Click="button1_Click" />
        <TextBox FontSize="11" Height="23" HorizontalAlignment="Left" Margin="4,64,0,0" Name="textBox2" VerticalAlignment="Top" Width="120" />
        <Button Content="Add Group" ToolTip="Add post process rule set" FontSize="11" Height="24" HorizontalAlignment="Left" Margin="130,64,0,0" Name="button2" VerticalAlignment="Top" Width="90" Click="button2_Click" />
    </Grid>
</UserControl>
